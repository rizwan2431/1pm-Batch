Creating users in chef node

Who is user?
 	-user is the one who can utilize the system resources(system resources like RAM, HDD and other )

Target: Create a user in chefnode
information need to create a user

username: user1
password: <encryptedpassword>
groupname : <groupname>
home: /home/<username>
shell: /bin/bash

=======================================================================
What is password structure ?
	-it is divided into 3 layers of the following password structure
	$encrypt_type$salt_name$actual_pass

	Firstlayer = $encrypt_type
	Second Layer =$salt_name
	Third Layer=$actual_pass

	$1$//JGtToA$MA68azyJjze2i32fMYK341
	$encrypt_type=6 types of sha1
		md5(encryption)=1
		crc=2
		sha256=5
		sha512=6
		$salt_name=$kgh556 (random unique number where system is generated)
		$actual_pass=$8md5nvef985
	

MD5 is a type of algorithm that is known as a cryptographic hash algorithm. MD5 produces a hash value in a hexadecimal format. This competes with other designs where hash functions take in a certain piece of data, and change it to provide a key or value that can be used in place of the original value.

==============================
To see the encrypted password of users
      [root@localhost~]# cat /etc/shadow | grep admin

How to generate a encrypted password?
  
	syntax: openssl passwd -<type> -salt   <saltname>  <actual_passwd>
	ex:[root@localhost~]# openssl passwd -1 -salt batman centos
	

Note: BATMAN (Benchmarking of Asymmetric Tools on Multiple Architectures, Non-Interactively) is a program to collect measurements of public-key systems.
<saltname> 
Password salting is a form of password encryption that involves appending a password to a given username and then hashing the new string of characters. This is usually done via an MD5 hashing algorithm. Password-salting is most commonly found within Linux operating systems, and it is generally considered a more secure password encryption model than any of the models used within the various Microsoft distributions.
___________________________________________

Create a Cookbook newuser

(Workstation)
1. c:\chef-starter\chef-repo\cookbooks\chef generate cookbook newuser


(login to chefnode and create a encrypted password for the user)
[root@localhost abclearn]# openssl passwd -1 -salt batman knituser
output:
$1$batman$oIRBZkC4pRTlNXgQ2V/pC.

Create the cookbook 

 C:\chefclassroom\chef-starter\chef-repo\cookbooks> chef generate cookbook newuser

2. write a recipe to create a group and user is assigned to that group

         c:\chef-starter\chef-repo\user_test\recipes\vi default.rb

	group 'JpsGroup' do
	  action :create
	end
	user 'jpsuser' do
	  password '$1$batman$oIRBZkC4pRTlNXgQ2V/pC.'
	  group 'JpsGroup' 
	  shell '/bin/bash'
	  home '/home/jpsuser'
	  manage_home true
	  action :create
	end

'

3. test the cookbook
	 $ C:\chefclassroom\chef-starter\chef-repo\cookbooks> cookstyle test newuser  ( or) knife cookbook test newuser 
						        
4. Upload the cookbook
	 c:\chef-starter\chef-repo\cookbook\knife cookbook upload newuser

5.  create a json file "chefnodes.json"
	 C:\chef-starter\chef-repo\cookbooks> vim chefnodes.json

	{ 

	  "name" : "chefnodes",
	  "chef_environment" : "_default",
	  "normal" : {
		  "tags" : [

		  ]
	  },
	  "policy_name" : null,	
	  "policy_group":null,
	  "run_list": [
		  "recipe[file_test]",
		  "recipe[web_server]",
		  "recipe[cron_test]",
		  "recipe[attribute_test]",
		  "recipe[template_test]",
		   "recipe[newuser]"		   		   	   	   
		   ]
	}
[OR]	
	Add the  cookbook to the the run_list

	C:\chefclassroom\chef-starter\chef-repo\cookbooks> knife node edit KNITNode1
		{
		  "name": "KNITNode1",
 		 "chef_environment": "_default",
 		 "normal": {
  		  "tags": [

   		 ]
  	},
 		 "policy_name": null,
 		 "policy_group": null,
 		 "run_list": [
 		 "role[webserver]",
 		 "recipe[httpd]",
 		 "recipe[cron_test]",
  		"recipe[attribute_test]",
  		"recipe[newuser]"
		]

	}

6.  Check the node list
	$ C:\chef-starter\chef-repo\cookbooks>knife node list

	Add the recipe to the node

	 C:\chef-starter\chef-repo\cookbooks>knife node run_list add NewNode "recipe[newuser]"

	Upload the cookbook

	 C:\chef-starter\chef-repo\cookbooks>knife cookbook upload newuser

7. Open the chef node and run the command   #chef-client

	it will create a group and user with the name "chefUser1"

	you can login with 'chefUser1' and password '$1$batman$mTuVhgzD0tOuigO9tAMqT1'

	To check the password of the particular user
	$ cat /etc/shadow | grep chefUser1


Note:check the cookbooks information onthe  following path
	/var/chef/cache
Cookbook Steps:

1. Create a Cookbook
2. Write a Recipe
3. Test a cookbook
4. upload cookbook to Server
5. update node run_list
6. execute chef-client on the node
============================================================
Create Another User

Create a Cookbook devops_user

(Workstation)
1. c:\chef-starter\chef-repo\cookbooks\chef generate cookbook devops_user


(login to chefnode and create a encrypted password for the user)
[root@localhost abclearn]# openssl passwd -1 -salt batman centos
output:
$1$batman$mTuVhgzD0tOuigO9tAMqT1
Create the cookbook 

 C:\chefclassroom\chef-starter\chef-repo\cookbooks> chef generate cookbook devops_user

2. write a recipe to create a group and user is assigned to that group

         c:\chef-starter\chef-repo\devops_user\recipes\vi default.rb

	group 'devops_group' do
	  action :create
	end
	user 'devops_user' do
	  password '$1$batman$fiTxSAm7HAx4dx5vdhW6O'
	  group 'devops_group' 
	  shell '/bin/bash'
	  home '/home/devops_user'
	  manage_home true
	  action :create
	end



3. test the cookbook
	 $ C:\chefclassroom\chef-starter\chef-repo\cookbooks> cookstyle test devops_user  ( or) knife cookbook test devops_user  

4. Upload the cookbook
	 c:\chef-starter\chef-repo\cookbook\knife cookbook upload devops_user

5.  create a json file "chefnodes.json"
	 C:\chef-starter\chef-repo\cookbooks> vim chefnodes.json

	{ 

	  "name" : "chefnodes",
	  "chef_environment" : "_default",
	  "normal" : {
		  "tags" : [

		  ]
	  },
	  "policy_name" : null,
	  "policy_group":null,
	  "run_list": [
		  "recipe[file_test]",
		  "recipe[web_server]",
		  "recipe[cron_test]",
		  "recipe[attribute_test]",
		  "recipe[template_test]",
		   "recipe[devops_user]"
	  ]
	}
[OR]	
	Add the  cookbook to the the run_list

	C:\chefclassroom\chef-starter\chef-repo\cookbooks> knife node edit JanNode1
		{
		  "name": "JanNode1",
 		 "chef_environment": "_default",
 		 "normal": {
  		  "tags": [

   		 ]
  	},
 		 "policy_name": null,
 		 "policy_group": null,
 		 "run_list": [
 		 "role[webserver]",
 		 "recipe[httpd]",
 		 "recipe[cron_test]",
  		"recipe[attribute_test]",
  		"recipe[devops_user]"
		]

	}

6.  Check the node list
	$ C:\chef-starter\chef-repo\cookbooks>knife node list

	Add the recipe to the node

	 C:\chef-starter\chef-repo\cookbooks>knife node run_list add JanNode1 "recipe[devops_user]"

	Upload the cookbook

	 C:\chef-starter\chef-repo\cookbooks>knife cookbook upload devops_user

7. Open the chef node and run the command   #chef-client

	it will create a group and user with the name "devops_user"

	you can login with 'devops_user' and password '$1$batman$mTuVhgzD0tOuigO9tAMqT1'

	To check the password of the particular user
	$ cat /etc/shadow | grep devops_user























